services:
  frontend:
    build:
      context: ./Frontend-Resourcely
      dockerfile: dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./Frontend-Resourcely:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - NEXT_PUBLIC_API_URL=http://localhost:8080
    networks:
      - app-network
    restart: unless-stopped
    depends_on:
      - backend
    command: sh -lc "npm ci && npm run dev -- --hostname 0.0.0.0 --port 3000"

  backend:
    build:
      context: ./Backend-Resourcely/Backend-Resourcely
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Default=Server=mssql-server;Database=resourcely-db;User Id=sa;Password=A_Str0ng_P@ssw0rd!;TrustServerCertificate=True;
      - ASPNETCORE_URLS=http://0.0.0.0:8080
    networks:
      - app-network
    restart: unless-stopped
    depends_on:
      - mssql-server

  mssql-server:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=A_Str0ng_P@ssw0rd!
    ports:
      - "1433:1433"
    volumes:
      - mssql_data:/var/opt/mssql
    networks:
      - app-network
    restart: unless-stopped

volumes:
  mssql_data:

networks:
  app-network:
    driver: bridge