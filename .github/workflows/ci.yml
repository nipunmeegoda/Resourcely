name: CI

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    - name: Restore dependencies
      run: dotnet restore Backend-Resourcely/Backend-Resourcely.sln
    - name: Build
      run: dotnet build --no-restore Backend-Resourcely/Backend-Resourcely.sln
    - name: Test
      run: dotnet test --no-build --verbosity normal Backend-Resourcely/Backend-Resourcely.sln
    - name: Upload backend artifact
      uses: actions/upload-artifact@v4
      with:
          name: backend-build
          path: .

  build-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Frontend-Resourcely
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    - run: node --version 
    - run: npm --version
    - run: npm ci 
    - run: npm run build
    - run: ls -la dist/ 
    - name: Upload frontend artifact
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: Frontend-Resourcely/

  test_frontend:
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]
    steps:
      - name: Download frontend artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: Frontend-Resourcely/
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Install dependencies
        working-directory: ./Frontend-Resourcely
        run: npm ci
      - name: Run frontend tests
        working-directory: ./Frontend-Resourcely
        run: npm test

  test_backend:
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend] # This job starts after both builds complete
    steps:
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      - name: Download backend artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-build
          path: .

      - name: Run backend tests
        run: dotnet test Backend-Resourcely/backend.Test/backend.Test.csproj --verbosity normal

  deploy:
    runs-on: ubuntu-latest
    needs: [test_frontend, test_backend]
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: janidureg.azurecr.io

      - name: Build and push single combined image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            janidureg.azurecr.io/stms-app:latest
            janidureg.azurecr.io/stms-app:${{ github.sha }}
          build-args: |
            VITE_API_BASE_URL=/api

      - name: Verify frontend build baked API base
        env:
          IMAGE: janidureg.azurecr.io/stms-app:latest
        run: |
          set -euo pipefail
          echo "Pulling image $IMAGE"
          docker pull $IMAGE

          echo "Searching for '/api' in frontend build under /app/wwwroot"
          # Use shell inside a temporary container to search files without running the app
          docker run --rm --entrypoint sh $IMAGE -c "grep -R --line-number --exclude-dir=node_modules '/api' /app/wwwroot || exit 2" || {
            echo 'ERROR: Frontend build does not contain /api references under /app/wwwroot'
            exit 1
          }